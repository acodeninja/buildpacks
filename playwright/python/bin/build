#!/usr/bin/env bash

set -euo pipefail

function indent() {
  LEVEL=$(("$1 + 1"))
  INDENT="s/^/$(seq -s\  "$LEVEL" | tr -d '[:digit:]')/"
  case $(uname) in
    Darwin) sed -l "$INDENT";;
    *)      sed -u "$INDENT";;
  esac
}

echo
echo -e "\e[1m\e[34mACodeNinja Buildpack for Playwright on Python\e[0m"
echo -e "  https://github.com/acodeninja/buildpacks/playwright/python"

echo "  Detecting playwright installation method"

if [[ -d "/layers/paketo-buildpacks_pip-install" ]]; then
  echo "    Found pip install buildpack, setting PYTHONPATH"
  export PYTHONPATH="$(cat /layers/paketo-buildpacks_pip-install/packages/env/PYTHONPATH.prepend):$PYTHONPATH"
fi

if [[ -d "/layers/paketo-buildpacks_pipenv-install" ]]; then
  echo "    Found pipenv install buildpack, setting PYTHONPATH"
  export PYTHONPATH="$(cat /layers/paketo-buildpacks_pipenv-install/packages/env/PYTHONPATH.prepend):$PYTHONPATH"
fi

mkdir -p "$CNB_LAYERS_DIR/playwright/env"
ENV_DIR="$CNB_LAYERS_DIR/playwright/env"

echo "  Installing playwright APT dependencies"

readarray -t APT_PACKAGES < "$CNB_BUILDPACK_DIR/packages/ubuntu-jammy.txt"
APT_ROOT="$CNB_LAYERS_DIR/playwright/apt"
APT_CACHE_DIR="$APT_ROOT/cache"
APT_STATE_DIR="$APT_ROOT/state"
APT_SOURCELIST_DIR="$APT_ROOT/sources"
APT_SOURCES="$APT_SOURCELIST_DIR/sources.list"

rm -rf "$APT_CACHE_DIR"
mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"
mkdir -p "$APT_SOURCELIST_DIR"

cat "/etc/apt/sources.list" > "$APT_SOURCES"

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
APT_OPTIONS="$APT_OPTIONS -o dir::etc::sourcelist=$APT_SOURCES -o dir::etc::sourceparts=/dev/null"

echo "Updating APT sources" | indent 4
apt-get $APT_OPTIONS update 2> >(grep -v "rm: cannot remove") | indent 6

echo "Downloading APT packages" | indent 4
apt-get $APT_OPTIONS -y --allow-downgrades --allow-remove-essential --allow-change-held-packages -d install --reinstall "${APT_PACKAGES[@]}" | indent 6

echo "Installing APT packages with dpkg" | indent 4
for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  echo "Installing $(basename $DEB)" | indent 6
  dpkg -x $DEB $APT_ROOT/ | indent 8
done

echo -n "$APT_ROOT/usr/bin" > "$ENV_DIR/PATH.prepend"
echo -n ":" > "$ENV_DIR/PATH.delim"

echo -n "$APT_ROOT/lib/x86_64-linux-gnu:$APT_ROOT/lib/i386-linux-gnu:$APT_ROOT/lib:$APT_ROOT/usr/lib/x86_64-linux-gnu:$APT_ROOT/usr/lib/i386-linux-gnu:$APT_ROOT/usr/lib" > "$ENV_DIR/LD_LIBRARY_PATH.prepend"
echo -n ":" > "$ENV_DIR/LD_LIBRARY_PATH.delim"

echo -n "$APT_ROOT/lib/x86_64-linux-gnu:$APT_ROOT/lib/i386-linux-gnu:$APT_ROOT/lib:$APT_ROOT/usr/lib/x86_64-linux-gnu:$APT_ROOT/usr/lib/i386-linux-gnu:$APT_ROOT/usr/lib" > "$ENV_DIR/LIBRARY_PATH.prepend"
echo -n ":" > "$ENV_DIR/LIBRARY_PATH.delim"

echo -n "$APT_ROOT/usr/include:$APT_ROOT/usr/include/x86_64-linux-gnu" > "$ENV_DIR/INCLUDE_PATH.prepend"
echo -n ":" > "$ENV_DIR/INCLUDE_PATH.delim"

echo -n "$APT_ROOT/usr/include:$APT_ROOT/usr/include/x86_64-linux-gnu" > "$ENV_DIR/CPATH.prepend"
echo -n ":" > "$ENV_DIR/CPATH.delim"

echo -n "$APT_ROOT/usr/include:$APT_ROOT/usr/include/x86_64-linux-gnu" > "$ENV_DIR/CPPPATH.prepend"
echo -n ":" > "$ENV_DIR/CPPPATH.delim"

echo -n "$APT_ROOT/usr/lib/x86_64-linux-gnu/pkgconfig:$APT_ROOT/usr/lib/i386-linux-gnu/pkgconfig:$APT_ROOT/usr/lib/pkgconfig" > "$ENV_DIR/PKG_CONFIG_PATH.prepend"
echo -n ":" > "$ENV_DIR/PKG_CONFIG_PATH.delim"

echo "  Installing playwright cached dependencies"
PLAYWRIGHT_BROWSERS_PATH="$CNB_LAYERS_DIR/playwright/dependencies" python -m playwright install 2>/dev/null | indent 4

#echo "  Configuring build environment"
#echo "    PLAYWRIGHT_BROWSERS_PATH -> \"$CNB_LAYERS_DIR/playwright/dependencies\""
#echo
#echo "  Configuring launch environment"
#echo "    PLAYWRIGHT_BROWSERS_PATH -> \"$CNB_LAYERS_DIR/playwright/dependencies\""
#echo

echo -n "$CNB_LAYERS_DIR/playwright/dependencies" > "$CNB_LAYERS_DIR/playwright/env/PLAYWRIGHT_BROWSERS_PATH"
{ echo "[types]"; echo "launch = true"; echo "build = true"; echo "cache = true"; } > "$CNB_LAYERS_DIR/playwright.toml"
